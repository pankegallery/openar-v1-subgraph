/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";

import type { Market } from "../Market";

export class Market__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _wn: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Market> {
    return super.deploy(_wn, overrides || {}) as Promise<Market>;
  }
  getDeployTransaction(
    _wn: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_wn, overrides || {});
  }
  attach(address: string): Market {
    return super.attach(address) as Market;
  }
  connect(signer: Signer): Market__factory {
    return super.connect(signer) as Market__factory;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Market {
    return new Contract(address, _abi, signerOrProvider) as Market;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_wn",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "currency",
            type: "address",
          },
        ],
        indexed: false,
        internalType: "struct IMarket.Ask",
        name: "ask",
        type: "tuple",
      },
    ],
    name: "AskCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "currency",
            type: "address",
          },
        ],
        indexed: false,
        internalType: "struct IMarket.Ask",
        name: "ask",
        type: "tuple",
      },
    ],
    name: "AskRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "currency",
            type: "address",
          },
          {
            internalType: "address",
            name: "bidder",
            type: "address",
          },
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Decimal.D256",
            name: "sellOnShare",
            type: "tuple",
          },
        ],
        indexed: false,
        internalType: "struct IMarket.Bid",
        name: "bid",
        type: "tuple",
      },
    ],
    name: "BidCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "currency",
            type: "address",
          },
          {
            internalType: "address",
            name: "bidder",
            type: "address",
          },
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Decimal.D256",
            name: "sellOnShare",
            type: "tuple",
          },
        ],
        indexed: false,
        internalType: "struct IMarket.Bid",
        name: "bid",
        type: "tuple",
      },
    ],
    name: "BidFinalized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "currency",
            type: "address",
          },
          {
            internalType: "address",
            name: "bidder",
            type: "address",
          },
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Decimal.D256",
            name: "sellOnShare",
            type: "tuple",
          },
        ],
        indexed: false,
        internalType: "struct IMarket.Bid",
        name: "bid",
        type: "tuple",
      },
    ],
    name: "BidRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Decimal.D256",
            name: "platform",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Decimal.D256",
            name: "pool",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Decimal.D256",
            name: "creator",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Decimal.D256",
            name: "owner",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Decimal.D256",
            name: "prevOwner",
            type: "tuple",
          },
        ],
        indexed: false,
        internalType: "struct IMarket.BidShares",
        name: "bidShares",
        type: "tuple",
      },
    ],
    name: "BidShareUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Decimal.D256",
            name: "firstSalePlatform",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Decimal.D256",
            name: "firstSalePool",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Decimal.D256",
            name: "furtherSalesPlatform",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Decimal.D256",
            name: "furtherSalesPool",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Decimal.D256",
            name: "furtherSalesCreator",
            type: "tuple",
          },
        ],
        indexed: false,
        internalType: "struct IMarket.PlatformCuts",
        name: "platformCuts",
        type: "tuple",
      },
    ],
    name: "PlatformCutsUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "currency",
            type: "address",
          },
          {
            internalType: "address",
            name: "bidder",
            type: "address",
          },
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Decimal.D256",
            name: "sellOnShare",
            type: "tuple",
          },
        ],
        internalType: "struct IMarket.Bid",
        name: "expectedBid",
        type: "tuple",
      },
    ],
    name: "acceptBid",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "bidder",
        type: "address",
      },
    ],
    name: "bidForTokenBidder",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "currency",
            type: "address",
          },
          {
            internalType: "address",
            name: "bidder",
            type: "address",
          },
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Decimal.D256",
            name: "sellOnShare",
            type: "tuple",
          },
        ],
        internalType: "struct IMarket.Bid",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "bidSharesForToken",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Decimal.D256",
            name: "platform",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Decimal.D256",
            name: "pool",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Decimal.D256",
            name: "creator",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Decimal.D256",
            name: "owner",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Decimal.D256",
            name: "prevOwner",
            type: "tuple",
          },
        ],
        internalType: "struct IMarket.BidShares",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "tokenIds",
        type: "uint256[]",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "currency",
            type: "address",
          },
          {
            internalType: "address",
            name: "bidder",
            type: "address",
          },
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Decimal.D256",
            name: "sellOnShare",
            type: "tuple",
          },
        ],
        internalType: "struct IMarket.Bid",
        name: "bid",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "seller",
        type: "address",
      },
    ],
    name: "buyFirstAvailable",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "mediaContractAddress",
        type: "address",
      },
    ],
    name: "configure",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "flag",
        type: "bool",
      },
    ],
    name: "configureEnforcePlatformCuts",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "flag",
        type: "bool",
      },
    ],
    name: "configurePausedUnpaused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "platformAddress",
        type: "address",
      },
    ],
    name: "configurePlatformAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Decimal.D256",
            name: "firstSalePlatform",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Decimal.D256",
            name: "firstSalePool",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Decimal.D256",
            name: "furtherSalesPlatform",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Decimal.D256",
            name: "furtherSalesPool",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Decimal.D256",
            name: "furtherSalesCreator",
            type: "tuple",
          },
        ],
        internalType: "struct IMarket.PlatformCuts",
        name: "pCuts",
        type: "tuple",
      },
    ],
    name: "configurePlatformCuts",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "openARPoolAddress",
        type: "address",
      },
    ],
    name: "configurePoolAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "currentAskForToken",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "currency",
            type: "address",
          },
        ],
        internalType: "struct IMarket.Ask",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "enforcePlatformCuts",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "bidAmount",
        type: "uint256",
      },
    ],
    name: "isValidBid",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Decimal.D256",
            name: "platform",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Decimal.D256",
            name: "pool",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Decimal.D256",
            name: "creator",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Decimal.D256",
            name: "owner",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Decimal.D256",
            name: "prevOwner",
            type: "tuple",
          },
        ],
        internalType: "struct IMarket.BidShares",
        name: "bidShares",
        type: "tuple",
      },
    ],
    name: "isValidBidShares",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "mediaContract",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "openARPlatform",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "openARPool",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "platformCuts",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
        ],
        internalType: "struct Decimal.D256",
        name: "firstSalePlatform",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
        ],
        internalType: "struct Decimal.D256",
        name: "firstSalePool",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
        ],
        internalType: "struct Decimal.D256",
        name: "furtherSalesPlatform",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
        ],
        internalType: "struct Decimal.D256",
        name: "furtherSalesPool",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
        ],
        internalType: "struct Decimal.D256",
        name: "furtherSalesCreator",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "removeAsk",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "tokenIds",
        type: "uint256[]",
      },
    ],
    name: "removeAskForBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "removeBid",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "currency",
            type: "address",
          },
        ],
        internalType: "struct IMarket.Ask",
        name: "ask",
        type: "tuple",
      },
    ],
    name: "setAsk",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "tokenIds",
        type: "uint256[]",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "currency",
            type: "address",
          },
        ],
        internalType: "struct IMarket.Ask",
        name: "ask",
        type: "tuple",
      },
    ],
    name: "setAskForBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "currency",
            type: "address",
          },
          {
            internalType: "address",
            name: "bidder",
            type: "address",
          },
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Decimal.D256",
            name: "sellOnShare",
            type: "tuple",
          },
        ],
        internalType: "struct IMarket.Bid",
        name: "bid",
        type: "tuple",
      },
    ],
    name: "setBid",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Decimal.D256",
            name: "platform",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Decimal.D256",
            name: "pool",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Decimal.D256",
            name: "creator",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Decimal.D256",
            name: "owner",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Decimal.D256",
            name: "prevOwner",
            type: "tuple",
          },
        ],
        internalType: "struct IMarket.BidShares",
        name: "bidShares",
        type: "tuple",
      },
    ],
    name: "setBidShares",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "currency",
            type: "address",
          },
        ],
        internalType: "struct IMarket.Ask",
        name: "ask",
        type: "tuple",
      },
    ],
    name: "setInitialAsk",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
        ],
        internalType: "struct Decimal.D256",
        name: "sharePercentage",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "splitShare",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "wrappedNativeCoin",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60806040526004805460ff60a01b1916600160a01b1790553480156200002457600080fd5b50604051620045db380380620045db83398101604081905262000047916200010e565b60016000908155620000616001600160e01b036200010a16565b600180546001600160a01b0319166001600160a01b038316908117909155604051919250906000907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350600a8054610100600160a81b0319166101006001600160a01b03841602179055620000d96200010a565b600b80546001600160a01b0319166001600160a01b039290921691909117905550600a805460ff191690556200013e565b3390565b60006020828403121562000120578081fd5b81516001600160a01b038116811462000137578182fd5b9392505050565b61448d806200014e6000396000f3fe6080604052600436106101dc5760003560e01c80638da5cb5b11610102578063d8661b0311610095578063f62c8c9f11610064578063f62c8c9f14610539578063f8838c121461054e578063f9ce05821461056e578063fe58edda1461059b576101e3565b8063d8661b03146104b9578063de0cb167146104d9578063e9b35ad8146104f9578063f2fde38b14610519576101e3565b8063ad827dc4116100d1578063ad827dc41461041f578063b320f4591461044c578063b920c1231461046c578063ba33939914610499576101e3565b80638da5cb5b146103c057806390c3022f146103d5578063919914fb146103f5578063a2e303701461040a576101e3565b80635bf624221161017a5780637f3e490c116101495780637f3e490c1461033a57806385efa19b1461035a5780638861d687146103805780638afc00fd146103a0576101e3565b80635bf62422146102d257806362f24b70146102e5578063715018a61461030557806375cb26721461031a576101e3565b806328220f35116101b657806328220f351461025d57806328f6ad621461027d5780634e21f9c014610290578063578064f6146102a5576101e3565b806302e8fe13146101e557806310348b501461021b57806311cc1ad61461023b576101e3565b366101e357005b005b3480156101f157600080fd5b5061020561020036600461368d565b6105bb565b604051610212919061371b565b60405180910390f35b34801561022757600080fd5b506101e3610236366004613464565b610673565b34801561024757600080fd5b506102506107c6565b60405161021291906136ca565b34801561026957600080fd5b506101e361027836600461358f565b6107da565b6101e361028b3660046134b1565b6108cc565b34801561029c57600080fd5b50610250610b6c565b3480156102b157600080fd5b506102c56102c036600461358f565b610b7b565b6040516102129190614260565b6101e36102e036600461366a565b610bb6565b3480156102f157600080fd5b506101e36103003660046135ee565b61112f565b34801561031157600080fd5b506101e3611204565b34801561032657600080fd5b506101e36103353660046133c0565b61128d565b34801561034657600080fd5b506101e3610355366004613611565b611337565b34801561036657600080fd5b5061036f6114d0565b604051610212959493929190614367565b34801561038c57600080fd5b506101e361039b3660046133c0565b611519565b3480156103ac57600080fd5b506102056103bb366004613512565b6115c3565b3480156103cc57600080fd5b506102506116a8565b3480156103e157600080fd5b506101e36103f036600461354a565b6116b7565b34801561040157600080fd5b50610205611975565b34801561041657600080fd5b50610250611985565b34801561042b57600080fd5b5061043f61043a3660046135bf565b611994565b60405161021291906142dd565b34801561045857600080fd5b506101e361046736600461358f565b611a0a565b34801561047857600080fd5b5061048c610487366004613565565b611ae0565b60405161021291906143be565b3480156104a557600080fd5b506101e36104b4366004613634565b611b04565b3480156104c557600080fd5b506101e36104d43660046135ee565b611de9565b3480156104e557600080fd5b506101e36104f43660046133c0565b611e4b565b34801561050557600080fd5b506101e36105143660046133f8565b611ef5565b34801561052557600080fd5b506101e36105343660046133c0565b612011565b34801561054557600080fd5b506102506120d2565b34801561055a57600080fd5b50610205610569366004613512565b6120e1565b34801561057a57600080fd5b5061058e61058936600461358f565b612169565b604051610212919061429e565b3480156105a757600080fd5b506102056105b636600461354a565b6121e4565b60006105c561314b565b6105ce84612169565b90506105d9816121e4565b6105fe5760405162461bcd60e51b81526004016105f590613f35565b60405180910390fd5b82158015906106695750610666610619826060015185611ae0565b61065a61062a846080015187611ae0565b61065a61063b866020015189611ae0565b61065a61064c88600001518b611ae0565b61065a89604001518c611ae0565b9063ffffffff61223b16565b83145b9150505b92915050565b600a5460ff16156106965760405162461bcd60e51b81526004016105f590613af6565b600260005414156106b95760405162461bcd60e51b81526004016105f5906140e8565b600260009081555b825181101561078a576002546001600160a01b031663430c20816106e3612260565b8584815181106106ef57fe5b60200260200101516040518363ffffffff1660e01b81526004016107149291906136de565b602060405180830381600087803b15801561072e57600080fd5b505af1158015610742573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610766919061352e565b6107825760405162461bcd60e51b81526004016105f590614008565b6001016106c1565b5060005b82518110156107bc576107b48382815181106107a657fe5b602002602001015183612264565b60010161078e565b5050600160005550565b600a5461010090046001600160a01b031681565b600a5460ff16156107fd5760405162461bcd60e51b81526004016105f590613af6565b610805612260565b60025482906001600160a01b03838116911614806108a2575060025460405163430c208160e01b81526001600160a01b039091169063430c20819061085090859085906004016136de565b602060405180830381600087803b15801561086a57600080fd5b505af115801561087e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108a2919061352e565b6108be5760405162461bcd60e51b81526004016105f590613c99565b6108c783612318565b505050565b600a5460ff16156108ef5760405162461bcd60e51b81526004016105f590613af6565b6108f7612260565b6001600160a01b031682604001516001600160a01b03161461092b5760405162461bcd60e51b81526004016105f5906141c6565b60408201516001600160a01b03166109555760405162461bcd60e51b81526004016105f590613831565b81516109735760405162461bcd60e51b81526004016105f590613abf565b60608201516001600160a01b031661099d5760405162461bcd60e51b81526004016105f590614055565b6000805b8451811015610b485760025485516001600160a01b03808616921690636352211e908890859081106109cf57fe5b60200260200101516040518263ffffffff1660e01b81526004016109f391906143be565b60206040518083038186803b158015610a0b57600080fd5b505afa158015610a1f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a4391906133dc565b6001600160a01b03161415610b40576000600e6000878481518110610a6457fe5b6020026020010151815260200190815260200160002060000154118015610adc5750600e6000868381518110610a9657fe5b6020026020010151815260200190815260200160002060010160009054906101000a90046001600160a01b03166001600160a01b031684602001516001600160a01b0316145b8015610b155750600e6000868381518110610af357fe5b6020026020010151815260200190815260200160002060000154846000015110155b15610b4057610b37858281518110610b2957fe5b602002602001015185610bb6565b60019150610b48565b6001016109a1565b5080610b665760405162461bcd60e51b81526004016105f5906138f1565b50505050565b6002546001600160a01b031681565b610b83613197565b506000908152600e6020908152604091829020825180840190935280548352600101546001600160a01b03169082015290565b600a5460ff1615610bd95760405162461bcd60e51b81526004016105f590613af6565b6002546040516314d43c8d60e11b815283916001600160a01b0316906329a8791a90610c099084906004016143be565b602060405180830381600087803b158015610c2357600080fd5b505af1158015610c37573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c5b919061352e565b610c775760405162461bcd60e51b81526004016105f59061411f565b610c7f612260565b6001600160a01b031682604001516001600160a01b031614610cb35760405162461bcd60e51b81526004016105f5906141c6565b60408201516001600160a01b0316610cdd5760405162461bcd60e51b81526004016105f590613831565b8151610cfb5760405162461bcd60e51b81526004016105f590613abf565b60608201516001600160a01b0316610d255760405162461bcd60e51b81526004016105f590614055565b610d2d61314b565b506000838152600d6020908152604091829020825160c081018452815460a0820190815281528351808401855260018301548152818401528351808401855260028301548152818501528351808401855260038301548152606082015283519283019093526004015481526080820152610db66064670de0b6b3a764000063ffffffff61238616565b608084015151602083015151835151604085015151610de3939261065a929091839163ffffffff61223b16565b1115610e015760405162461bcd60e51b81526004016105f590613ee4565b600454600160a01b900460ff161580610e585750610e2e6064670de0b6b3a764000063ffffffff61238616565b608084015151600954600854600754610e55939261065a929091839163ffffffff61223b16565b11155b610e745760405162461bcd60e51b81526004016105f590613bda565b610e7c6131ae565b506000848152600c60209081526040808320868201516001600160a01b03908116855290835292819020815160a08101835281548152600182015485168185015260028201548516818401526003820154909416606085015281519283019091526004015481526080820152805115610efd57610efd8460400151866123c0565b6000610f11856000015186602001516124f0565b90506040518060a0016040528082815260200186602001516001600160a01b0316815260200186604001516001600160a01b0316815260200186606001516001600160a01b031681526020018660800151815250600c6000888152602001908152602001600020600087604001516001600160a01b03166001600160a01b031681526020019081526020016000206000820151816000015560208201518160010160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060408201518160020160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060608201518160030160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550608082015181600401600082015181600001555050905050857f327bc9021bfbee403a11b13dd6c819999006aff090cc129f07e9f2840af38dd5600c6000898152602001908152602001600020600088604001516001600160a01b03166001600160a01b031681526020019081526020016000206040516110b19190614326565b60405180910390a26000868152600e6020526040902054158015906110f957506000868152600e6020908152604090912060010154908601516001600160a01b039081169116145b801561111457506000868152600e6020526040902054855110155b15611127576111278686604001516126ed565b505050505050565b600a5460ff16156111525760405162461bcd60e51b81526004016105f590613af6565b61115a612260565b60025460405163430c208160e01b815284916001600160a01b03169063430c20819061118c90859085906004016136de565b602060405180830381600087803b1580156111a657600080fd5b505af11580156111ba573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111de919061352e565b6111fa5760405162461bcd60e51b81526004016105f590613c62565b610b668484612264565b61120c612260565b6001600160a01b031661121d6116a8565b6001600160a01b0316146112435760405162461bcd60e51b81526004016105f590613dfd565b6001546040516000916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600180546001600160a01b0319169055565b611295612260565b6001600160a01b03166112a66116a8565b6001600160a01b0316146112cc5760405162461bcd60e51b81526004016105f590613dfd565b600a5460ff16156112ef5760405162461bcd60e51b81526004016105f590613af6565b6001600160a01b0381166113155760405162461bcd60e51b81526004016105f59061420f565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b600a5460ff161561135a5760405162461bcd60e51b81526004016105f590613af6565b611362612260565b6002546001600160a01b0390811691161461138f5760405162461bcd60e51b81526004016105f590613d5e565b600454600160a01b900460ff161561142d576040805160208082018352600082526080840191909152815190810190915260065460055482916113f3916113e790816064670de0b6b3a764000063ffffffff61238616565b9063ffffffff612d2c16565b9052606082015260408051602080820183526005548252908352815180820183526006548152818401528151908101825260008152908201525b611436816121e4565b6114525760405162461bcd60e51b81526004016105f590613759565b6000828152600d60209081526040918290208351518155908301515160018201558183015151600282015560608301515160038201556080830151516004909101555182907f56bf80dd437e71297b672f162543376a92b41bf544559c476d1f9c42089a66f4906114c490849061429e565b60405180910390a25050565b6040805160208082018352600554825282518082018452600654815283518083018552600754815284518084018652600854815285519384019095526009548352929390929185565b611521612260565b6001600160a01b03166115326116a8565b6001600160a01b0316146115585760405162461bcd60e51b81526004016105f590613dfd565b600a5460ff161561157b5760405162461bcd60e51b81526004016105f590613af6565b6001600160a01b0381166115a15760405162461bcd60e51b81526004016105f590613e87565b600380546001600160a01b0319166001600160a01b0392909216919091179055565b60006115cd612260565b6001600160a01b03166115de6116a8565b6001600160a01b0316146116045760405162461bcd60e51b81526004016105f590613dfd565b600a805460ff1916831580159190911790915561165e577f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa611644612260565b60405161165191906136ca565b60405180910390a161169d565b7f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258611687612260565b60405161169491906136ca565b60405180910390a15b5050600a5460ff1690565b6001546001600160a01b031690565b6116bf612260565b6001600160a01b03166116d06116a8565b6001600160a01b0316146116f65760405162461bcd60e51b81526004016105f590613dfd565b600a5460ff16156117195760405162461bcd60e51b81526004016105f590613af6565b6117326000670de0b6b3a764000063ffffffff61238616565b8151511080159061175d57506117576064670de0b6b3a764000063ffffffff61238616565b81515111155b6117795760405162461bcd60e51b81526004016105f590613b7d565b6117926000670de0b6b3a764000063ffffffff61238616565b602082015151108015906117c357506117ba6064670de0b6b3a764000063ffffffff61238616565b60208201515111155b6117df5760405162461bcd60e51b81526004016105f590613e32565b6117f86000670de0b6b3a764000063ffffffff61238616565b6040820151511080159061182957506118206064670de0b6b3a764000063ffffffff61238616565b60408201515111155b6118455760405162461bcd60e51b81526004016105f5906139af565b61185e6000670de0b6b3a764000063ffffffff61238616565b6040820151511080159061188f57506118866064670de0b6b3a764000063ffffffff61238616565b60408201515111155b6118ab5760405162461bcd60e51b81526004016105f59061416e565b6118c46000670de0b6b3a764000063ffffffff61238616565b608082015151108015906118f557506118ec6064670de0b6b3a764000063ffffffff61238616565b60808201515111155b6119115760405162461bcd60e51b81526004016105f590613f79565b805151600590815560208201515160065560408083015151600755606083015151600855608083015151600955517f1964e1b859b551afd911cd7a22a4955efc66d5734dd0343ba9cf28e41b5e11eb9161196a9161438b565b60405180910390a150565b600454600160a01b900460ff1681565b6004546001600160a01b031681565b61199c6131ae565b506000828152600c602090815260408083206001600160a01b03808616855290835292819020815160a0810183528154815260018201548516818501526002820154851681840152600382015490941660608501528151928301909152600401548152608082015292915050565b600a5460ff1615611a2d5760405162461bcd60e51b81526004016105f590613af6565b6002546040516314d43c8d60e11b815282916001600160a01b0316906329a8791a90611a5d9084906004016143be565b602060405180830381600087803b158015611a7757600080fd5b505af1158015611a8b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611aaf919061352e565b611acb5760405162461bcd60e51b81526004016105f59061411f565b611adc611ad6612260565b836123c0565b5050565b6000611afd6064611af18486612d54565b9063ffffffff612d6d16565b9392505050565b600a5460ff1615611b275760405162461bcd60e51b81526004016105f590613af6565b6002546040516314d43c8d60e11b815283916001600160a01b0316906329a8791a90611b579084906004016143be565b602060405180830381600087803b158015611b7157600080fd5b505af1158015611b85573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ba9919061352e565b611bc55760405162461bcd60e51b81526004016105f59061411f565b611bcd612260565b60025460405163430c208160e01b815285916001600160a01b03169063430c208190611bff90859085906004016136de565b602060405180830381600087803b158015611c1957600080fd5b505af1158015611c2d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c51919061352e565b611c6d5760405162461bcd60e51b81526004016105f590613c62565b611c756131ae565b6000868152600c60205260408082209190611c9690606089019089016133c0565b6001600160a01b0390811682526020808301939093526040918201600020825160a0810184528154815260018201548316818601526002820154831681850152600382015490921660608301528251938401909252600490910154825260808101919091528051909150611d1c5760405162461bcd60e51b81526004016105f590613c2b565b80518535148015611d515750611d3860408601602087016133c0565b6001600160a01b031681602001516001600160a01b0316145b8015611d6557506080818101515190860135145b8015611d955750611d7c60808601606087016133c0565b6001600160a01b031681606001516001600160a01b0316145b611db15760405162461bcd60e51b81526004016105f590613d27565b611dbf8682600001516105bb565b611ddb5760405162461bcd60e51b81526004016105f5906137a4565b6111278682604001516126ed565b600a5460ff1615611e0c5760405162461bcd60e51b81526004016105f590613af6565b611e14612260565b6002546001600160a01b03908116911614611e415760405162461bcd60e51b81526004016105f590613d5e565b611adc8282612264565b611e53612260565b6001600160a01b0316611e646116a8565b6001600160a01b031614611e8a5760405162461bcd60e51b81526004016105f590613dfd565b600a5460ff1615611ead5760405162461bcd60e51b81526004016105f590613af6565b6001600160a01b038116611ed35760405162461bcd60e51b81526004016105f590613e87565b600480546001600160a01b0319166001600160a01b0392909216919091179055565b600a5460ff1615611f185760405162461bcd60e51b81526004016105f590613af6565b60005b81811015611fe2576002546001600160a01b031663430c2081611f3c612260565b858585818110611f4857fe5b905060200201356040518363ffffffff1660e01b8152600401611f6c9291906136de565b602060405180830381600087803b158015611f8657600080fd5b505af1158015611f9a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611fbe919061352e565b611fda5760405162461bcd60e51b81526004016105f590613928565b600101611f1b565b5060005b818110156108c757612009838383818110611ffd57fe5b90506020020135612318565b600101611fe6565b612019612260565b6001600160a01b031661202a6116a8565b6001600160a01b0316146120505760405162461bcd60e51b81526004016105f590613dfd565b6001600160a01b0381166120765760405162461bcd60e51b81526004016105f5906137eb565b6001546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600180546001600160a01b0319166001600160a01b0392909216919091179055565b6003546001600160a01b031681565b60006120eb612260565b6001600160a01b03166120fc6116a8565b6001600160a01b0316146121225760405162461bcd60e51b81526004016105f590613dfd565b600a5460ff16156121455760405162461bcd60e51b81526004016105f590613af6565b506004805460ff60a01b1916600160a01b9215158302179081905560ff9190041690565b61217161314b565b506000908152600d6020908152604091829020825160c081018452815460a082019081528152835180840185526001830154815281840152835180840185526002830154815281850152835180840185526003830154815260608201528351928301909352600401548152608082015290565b60006121ff6064670de0b6b3a764000063ffffffff61238616565b602083015151835151608085015151606086015151604087015151612234949361065a9390928492839163ffffffff61223b16565b1492915050565b600082820183811015611afd5760405162461bcd60e51b81526004016105f5906138ba565b3390565b80516122825760405162461bcd60e51b81526004016105f590613978565b6122908282600001516105bb565b6122ac5760405162461bcd60e51b81526004016105f590613873565b6000828152600e60209081526040918290208351815590830151600190910180546001600160a01b0319166001600160a01b039092169190911790555182907ff7347cb9e91d8cbe995b51920ba5f92cbf84a9e09cbed3cd7a739fef4d1d07cf906114c4908490614260565b807fbf58f6d6c7d7c6efc69e7444efa93ed26d7cdc0e82e12a37df96f36a367561df600e600084815260200190815260200160002060405161235a9190614280565b60405180910390a26000908152600e6020526040812090815560010180546001600160a01b0319169055565b6000826123955750600061066d565b828202828482816123a257fe5b0414611afd5760405162461bcd60e51b81526004016105f590613ce6565b6123c86131ae565b506000818152600c602090815260408083206001600160a01b03808716855290835292819020815160a08101835281548152600182015485168185015260028201548516818401526003820154909416606085015281519283019091526004015481526080820152805161244e5760405162461bcd60e51b81526004016105f590613a0c565b817fcbebd567b8a5c57f63ec61dc46746aab28daff6bdd1f4a6a0a305c17fa5465c98260405161247e91906142dd565b60405180910390a26000828152600c602090815260408083206001600160a01b038716845282528083208381556001810180546001600160a01b031990811690915560028201805482169055600382018054909116905560040192909255908201518251918301516108c79290612d9f565b60006001600160a01b03821661258d5782341461251f5760405162461bcd60e51b81526004016105f590613d95565b600a60019054906101000a90046001600160a01b03166001600160a01b031663d0e30db0846040518263ffffffff1660e01b81526004016000604051808303818588803b15801561256f57600080fd5b505af1158015612583573d6000803e3d6000fd5b50505050506126e6565b6040516370a0823160e01b815282906000906001600160a01b038316906370a08231906125be9030906004016136ca565b60206040518083038186803b1580156125d657600080fd5b505afa1580156125ea573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061260e91906135a7565b905061263361261b612260565b6001600160a01b03841690308863ffffffff612ec716565b6040516370a0823160e01b81526000906001600160a01b038416906370a08231906126629030906004016136ca565b60206040518083038186803b15801561267a57600080fd5b505afa15801561268e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906126b291906135a7565b9050806126c5838863ffffffff61223b16565b146126e25760405162461bcd60e51b81526004016105f590613b20565b5050505b5090919050565b6126f56131ae565b506000828152600c602090815260408083206001600160a01b03808616855290835292819020815160a0810183528154815260018201548516818501526002820154851681840152600382015490941660608501528151928301909152600401548152608082015261276561314b565b61276d61314b565b506000848152600d6020908152604091829020825160c081018452815460a0820190815281528351808401855260018301548152818401528351808401855260028301548152818501528351808401855260038301548152606082019081528451938401909452600490910154825260808101919091529051511561288a576002546040516331a9108f60e11b815261288a916001600160a01b031690636352211e9061281e9089906004016143be565b60206040518083038186803b15801561283657600080fd5b505afa15801561284a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061286e91906133dc565b61288083606001518660000151611ae0565b8560200151612d9f565b604081015151156129295760025460405163e0fd045f60e01b8152612929916001600160a01b03169063e0fd045f906128c79089906004016143be565b60206040518083038186803b1580156128df57600080fd5b505afa1580156128f3573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061291791906133dc565b61288083604001518660000151611ae0565b608081015151156129c8576002546040516304ec739360e51b81526129c8916001600160a01b031690639d8e7260906129669089906004016143be565b60206040518083038186803b15801561297e57600080fd5b505afa158015612992573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906129b691906133dc565b61288083608001518660000151611ae0565b805151156129ee57600354815184516129ee926001600160a01b03169161288091611ae0565b60208101515115612a1a5760045460208201518451612a1a926001600160a01b03169161288091611ae0565b6002546060840151604051630f6b630f60e41b81526001600160a01b039092169163f6b630f091612a50918991906004016143c7565b600060405180830381600087803b158015612a6a57600080fd5b505af1158015612a7e573d6000803e3d6000fd5b5050600454600160a01b900460ff16159150612ace905057604080516020808201835260075482529084528151808201835260085481528482015281519081018252600954815290830152612ae7565b8051825260208082015190830152604080820151908301525b608080840180519184019190915260408051602080820183529251519284015151845151928501515191938493612b3b9391926113e792909183918290816064670de0b6b3a764000063ffffffff61238616565b90526060830152612b4b826121e4565b15612b97576000858152600d6020908152604091829020845151815590840151516001820155908301515160028201556060830151516003820155608083015151600490910155612c1c565b60408051602080820183526007548252908452815180820183526008548152848201908152825180830184526009548152858401908152835180840185526000815260808701528351928301909352515184515192515191928392612c1492916113e7918290816064670de0b6b3a764000063ffffffff61238616565b905260608301525b6000858152600d60209081526040808320855151815582860151516001808301919091558287015151600280840191909155606088015151600380850191909155608089015151600494850155600c86528487206001600160a01b038c16885290955283862086815591820180546001600160a01b0319908116909155908201805482169055938101805490941690935591909101919091555185907f56bf80dd437e71297b672f162543376a92b41bf544559c476d1f9c42089a66f490612ce590849061429e565b60405180910390a2847fb6ef177c7a6f32b283a49b5e0463a39240cdaa278028dfb219480d050e8ee54c84604051612d1d91906142dd565b60405180910390a25050505050565b600082821115612d4e5760405162461bcd60e51b81526004016105f590613a51565b50900390565b8051600090611afd908490670de0b6b3a7640000612f1f565b6000808211612d8e5760405162461bcd60e51b81526004016105f590613a88565b818381612d9757fe5b049392505050565b6001600160a01b038116612ead57600a54604051632e1a7d4d60e01b81526101009091046001600160a01b031690632e1a7d4d90612de19085906004016143be565b600060405180830381600087803b158015612dfb57600080fd5b505af1158015612e0f573d6000803e3d6000fd5b50505050612e1d8383612f3d565b612ea857600a60019054906101000a90046001600160a01b03166001600160a01b031663d0e30db0836040518263ffffffff1660e01b81526004016000604051808303818588803b158015612e7157600080fd5b505af1158015612e85573d6000803e3d6000fd5b5050600a54612ea8935061010090046001600160a01b0316915085905084612fb4565b6108c7565b6108c76001600160a01b038216848463ffffffff612fb416565b610b66846323b872dd60e01b858585604051602401612ee8939291906136f7565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152612fd3565b6000612f3582611af1868663ffffffff61238616565b949350505050565b60408051600080825260208201928390529182916001600160a01b038616918591612f67916136ae565b60006040518083038185875af1925050503d8060008114612fa4576040519150601f19603f3d011682016040523d82523d6000602084013e612fa9565b606091505b509095945050505050565b6108c78363a9059cbb60e01b8484604051602401612ee89291906136de565b6060613028826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166130629092919063ffffffff16565b8051909150156108c75780806020019051810190613046919061352e565b6108c75760405162461bcd60e51b81526004016105f59061409e565b6060612f358484600085856130768561310c565b6130925760405162461bcd60e51b81526004016105f590613fd1565b60006060866001600160a01b031685876040516130af91906136ae565b60006040518083038185875af1925050503d80600081146130ec576040519150601f19603f3d011682016040523d82523d6000602084013e6130f1565b606091505b5091509150613101828286613112565b979650505050505050565b3b151590565b60608315613121575081611afd565b8251156131315782518084602001fd5b8160405162461bcd60e51b81526004016105f59190613726565b6040518060a0016040528061315e6131f4565b815260200161316b6131f4565b81526020016131786131f4565b81526020016131856131f4565b81526020016131926131f4565b905290565b604080518082019091526000808252602082015290565b6040518060a001604052806000815260200160006001600160a01b0316815260200160006001600160a01b0316815260200160006001600160a01b031681526020016131925b6040518060200160405280600081525090565b600082601f830112613217578081fd5b813567ffffffffffffffff81111561322d578182fd5b602080820261323d8282016143de565b8381529350818401858301828701840188101561325957600080fd5b600092505b8483101561327c57803582526001929092019190830190830161325e565b505050505092915050565b600060408284031215613298578081fd5b6132a260406143de565b90508135815260208201356132b681614431565b602082015292915050565b600060a082840312156132d2578081fd5b6132dc60a06143de565b90506132e8838361339b565b81526132f7836020840161339b565b6020820152613309836040840161339b565b604082015261331b836060840161339b565b606082015261332d836080840161339b565b608082015292915050565b600060a08284031215613349578081fd5b61335360a06143de565b905081358152602082013561336781614431565b6020820152604082013561337a81614431565b6040820152606082013561338d81614431565b606082015261332d83608084015b6000602082840312156133ac578081fd5b6133b660206143de565b9135825250919050565b6000602082840312156133d1578081fd5b8135611afd81614431565b6000602082840312156133ed578081fd5b8151611afd81614431565b6000806020838503121561340a578081fd5b823567ffffffffffffffff80821115613421578283fd5b81850186601f820112613432578384fd5b8035925081831115613442578384fd5b8660208085028301011115613455578384fd5b60200196919550909350505050565b60008060608385031215613476578182fd5b823567ffffffffffffffff81111561348c578283fd5b61349885828601613207565b9250506134a88460208501613287565b90509250929050565b600080600060e084860312156134c5578081fd5b833567ffffffffffffffff8111156134db578182fd5b6134e786828701613207565b9350506134f78560208601613338565b915060c084013561350781614431565b809150509250925092565b600060208284031215613523578081fd5b8135611afd81614449565b60006020828403121561353f578081fd5b8151611afd81614449565b600060a0828403121561355b578081fd5b611afd83836132c1565b60008060408385031215613577578182fd5b613581848461339b565b946020939093013593505050565b6000602082840312156135a0578081fd5b5035919050565b6000602082840312156135b8578081fd5b5051919050565b600080604083850312156135d1578182fd5b8235915060208301356135e381614431565b809150509250929050565b60008060608385031215613600578182fd5b823591506134a88460208501613287565b60008060c08385031215613623578182fd5b823591506134a884602085016132c1565b60008082840360c0811215613647578283fd5b8335925060a0601f198201121561365c578182fd5b506020830190509250929050565b60008060c0838503121561367c578182fd5b823591506134a88460208501613338565b6000806040838503121561369f578182fd5b50508035926020909101359150565b600082516136c0818460208701614405565b9190910192915050565b6001600160a01b0391909116815260200190565b6001600160a01b03929092168252602082015260400190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b901515815260200190565b6000602082528251806020840152613745816040850160208701614405565b601f01601f19169190910160400192915050565b6020808252602b908201527f4d61726b65743a20496e76616c696420626964207368617265732c206d75737460408201526a02073756d20746f203130360ac1b606082015260800190565b60208082526027908201527f4d61726b65743a2042696420696e76616c696420666f722073686172652073706040820152666c697474696e6760c81b606082015260800190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b60208082526022908201527f4d61726b65743a206269646465722063616e6e6f742062652030206164647265604082015261737360f01b606082015260800190565b60208082526027908201527f4d61726b65743a2041736b20696e76616c696420666f722073686172652073706040820152666c697474696e6760c81b606082015260800190565b6020808252601b908201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604082015260600190565b6020808252601e908201527f4d61726b65743a206f626a656374207075726368617365206661696c65640000604082015260600190565b60208082526030908201527f4d61726b65743a2072656d6f766541736b466f724261746368204f6e6c79206160408201526f38383937bb32b21037b91037bbb732b960811b606082015260800190565b6020808252601b908201527f4d61726b65743a2041736b206e6565647320746f206265203e20300000000000604082015260600190565b6020808252603f908201527f4d61726b65743a206675727468657253616c65734375744d61696e74656e616e60408201527f6365206e65656420746f206265206265747765656e203020616e642031303000606082015260800190565b60208082526025908201527f4d61726b65743a2063616e6e6f742072656d6f76652062696420616d6f756e746040820152640206f6620360dc1b606082015260800190565b6020808252601e908201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604082015260600190565b6020808252601a908201527f536166654d6174683a206469766973696f6e206279207a65726f000000000000604082015260600190565b6020808252601e908201527f4d61726b65743a2063616e6e6f742062696420616d6f756e74206f6620300000604082015260600190565b60208082526010908201526f14185d5cd8589b194e881c185d5cd95960821b604082015260600190565b6020808252603c908201527f4d61726b65743a20546f6b656e207472616e736665722063616c6c206469642060408201527f6e6f74207472616e7366657220657870656374656420616d6f756e7400000000606082015260800190565b6020808252603c908201527f4d61726b65743a20666972737453616c654375744d61696e74656e616e63652060408201527f6e65656420746f206265206265747765656e203020616e642031303000000000606082015260800190565b60208082526031908201527f4d61726b65743a2053656c6c206f6e2066656520696e76616c696420666f722060408201527039b430b9329039b83634ba3a34b733901960791b606082015260800190565b6020808252601e908201527f4d61726b65743a2063616e6e6f742061636365707420626964206f6620300000604082015260600190565b6020808252601e908201527f4d61726b65743a204f6e6c7920617070726f766564206f72206f776e65720000604082015260600190565b6020808252602d908201527f4d61726b65743a204f6e6c79206d656469612063616c6c65722c20617070726f60408201526c3b32b2161037b91037bbb732b960991b606082015260800190565b60208082526021908201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6040820152607760f81b606082015260800190565b6020808252601d908201527f4d61726b65743a20556e65787065637465642062696420666f756e642e000000604082015260600190565b6020808252601b908201527f4d61726b65743a204f6e6c79206d6564696120636f6e74726163740000000000604082015260600190565b60208082526042908201527f4d61726b65743a2053656e74204e617469766520436f696e2056616c7565206460408201527f6f6573206e6f74206d61746368207370656369666965642062696420616d6f756060820152611b9d60f21b608082015260a00190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526035908201527f4d61726b65743a20666972737453616c65437574506f6f6c206e65656420746f6040820152740206265206265747765656e203020616e642031303605c1b606082015260800190565b6020808252603a908201527f4d61726b65743a2063616e6e6f742073657420706c6174666f726d2077616c6c60408201527f65742061646472657373206173207a65726f2061646472657373000000000000606082015260800190565b60208082526031908201527f4d61726b65743a2053656c6c206f6e2066656520696e76616c696420666f722060408201527073686172652073706c697474696e67203160781b606082015260800190565b60208082526024908201527f4d61726b65743a20496e76616c6964206269642073686172657320666f72207460408201526337b5b2b760e11b606082015260800190565b60208082526038908201527f4d61726b65743a206675727468657253616c657343726561746f72206e656564604082015277020746f206265206265747765656e203020616e64203130360441b606082015260800190565b6020808252601d908201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604082015260600190565b6020808252602d908201527f4d61726b65743a2073657441736b466f724261746368204f6e6c79206170707260408201526c37bb32b21037b91037bbb732b960991b606082015260800190565b60208082526029908201527f4d61726b65743a2062696420726563697069656e742063616e6e6f742062652060408201526830206164647265737360b81b606082015260800190565b6020808252602a908201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6040820152691bdd081cdd58d8d9595960b21b606082015260800190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b6020808252602f908201527f4d61726b65743a20746f6b656e2077697468207468617420696420686173206e60408201526e1bdd081899595b8818dc99585d1959608a1b606082015260800190565b60208082526038908201527f4d61726b65743a206675727468657253616c6573437574506f6f6c206e656564604082015277020746f206265206265747765656e203020616e64203130360441b606082015260800190565b60208082526029908201527f4d61726b65743a20626964646572206e6565647320746f206265206d6573736160408201526833b29039b2b73232b960b91b606082015260800190565b60208082526031908201527f4d61726b65743a2063616e6e6f7420736574206d6564696120636f6e7472616360408201527074206173207a65726f206164647265737360781b606082015260800190565b815181526020918201516001600160a01b03169181019190915260400190565b815481526001909101546001600160a01b0316602082015260400190565b600060a0820190508251518252602083015151602083015260408301515160408301526060830151516060830152608083015151608083015292915050565b815181526020808301516001600160a01b039081169183019190915260408084015182169083015260608084015190911690820152608091820151519181019190915260a00190565b8154815260018201546001600160a01b0390811660208301526002830154811660408301526003830154166060820152600490910154608082015260a00190565b94518552925160208501529051604084015251606083015251608082015260a00190565b81548152600182015460208201526002820154604082015260038201546060820152600490910154608082015260a00190565b90815260200190565b9182526001600160a01b0316602082015260400190565b60405181810167ffffffffffffffff811182821017156143fd57600080fd5b604052919050565b60005b83811015614420578181015183820152602001614408565b83811115610b665750506000910152565b6001600160a01b038116811461444657600080fd5b50565b801515811461444657600080fdfea2646970667358221220a3d9b8518ecd9412c6a8961fd466ce7ab3e092d35b165255cc9fbcc1743877c164736f6c63430006080033";
